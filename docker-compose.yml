version: '3.1'

services:
  elasticsearch:
    build:
      context: docker/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./docker/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "${PORT_ELASTICSEARCH_1}:9200"
      - "${PORT_ELASTICSEARCH_2}:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: docker/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./docker/logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./docker/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "${PORT_LOGSTASH}:5044"
      - "${PORT_LOGSTASH_TCP}:5002/tcp"
      - "${PORT_LOGSTASH_UPD}:5001/udp"
      - "${PORT_LOGSTASH_API}:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: docker/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./docker/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "${PORT_KIBANA}:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - elk

  php:
    restart: always
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile
    volumes:
      - "./:/var/www/laravel-elk/"
    networks:
      - elk

volumes:
  elasticsearch:

networks:
  elk:
    driver: bridge
